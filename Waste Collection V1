{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z1DnGakBSvA3",
        "outputId": "7a42e8dc-8f4a-4065-f614-5b11d39f2445"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting geopandas\n",
            "  Downloading geopandas-0.12.1-py3-none-any.whl (1.1 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.1 MB 15.5 MB/s \n",
            "\u001b[?25hCollecting fiona>=1.8\n",
            "  Downloading Fiona-1.8.22-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.6 MB)\n",
            "\u001b[K     |████████████████████████████████| 16.6 MB 2.3 MB/s \n",
            "\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.8/dist-packages (from geopandas) (21.3)\n",
            "Requirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from geopandas) (1.3.5)\n",
            "Collecting pyproj>=2.6.1.post1\n",
            "  Downloading pyproj-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n",
            "\u001b[K     |████████████████████████████████| 7.8 MB 33.2 MB/s \n",
            "\u001b[?25hRequirement already satisfied: shapely>=1.7 in /usr/local/lib/python3.8/dist-packages (from geopandas) (1.8.5.post1)\n",
            "Collecting cligj>=0.5\n",
            "  Downloading cligj-0.7.2-py3-none-any.whl (7.1 kB)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (57.4.0)\n",
            "Requirement already satisfied: six>=1.7 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (1.15.0)\n",
            "Requirement already satisfied: click>=4.0 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (7.1.2)\n",
            "Collecting click-plugins>=1.0\n",
            "  Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)\n",
            "Requirement already satisfied: attrs>=17 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (22.1.0)\n",
            "Collecting munch\n",
            "  Downloading munch-2.5.0-py2.py3-none-any.whl (10 kB)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (2022.9.24)\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (1.21.6)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (2022.6)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (2.8.2)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.8/dist-packages (from packaging->geopandas) (3.0.9)\n",
            "Installing collected packages: munch, cligj, click-plugins, pyproj, fiona, geopandas\n",
            "Successfully installed click-plugins-1.1.1 cligj-0.7.2 fiona-1.8.22 geopandas-0.12.1 munch-2.5.0 pyproj-3.4.0\n"
          ]
        }
      ],
      "source": [
        "pip install geopandas"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install mapclassify"
      ],
      "metadata": {
        "id": "EofnuaR31G4w"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import geopandas as gpd\n",
        "import numpy as np\n",
        "import os\n",
        "import urllib\n",
        "import sys\n",
        "from matplotlib import pyplot as plt\n",
        "%matplotlib inline"
      ],
      "metadata": {
        "id": "0sbrzyslUJVn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import io\n",
        "import pandas as pd\n",
        "from google.colab import files"
      ],
      "metadata": {
        "id": "gId2aEvJVr_c"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "uploaded = files.upload()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "gwDxsaMvV7uW",
        "outputId": "e2a551d5-0b8b-450f-d577-71861a367298"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-f83f6aae-38a7-4117-b0fe-827a83cc03a9\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-f83f6aae-38a7-4117-b0fe-827a83cc03a9\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving DOB_Complaints_Received.csv to DOB_Complaints_Received.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Data = pd.read_csv(io.BytesIO(uploaded.get('DOB_Complaints_Received.csv')))"
      ],
      "metadata": {
        "id": "6WOlI7qjWs6Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "nnZWrj1SdiX7",
        "outputId": "a76b4e80-5db8-4790-a733-a39d0a6f9cc4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Complaint Number  Status Date Entered  House Number   ZIP Code  \\\n",
              "0           3672431  CLOSED   10/22/2018  104           11249       \n",
              "1           5136339  CLOSED   08/07/2018  561           10312       \n",
              "2           1494617  ACTIVE   11/09/2018  23            10028       \n",
              "3           3674825  ACTIVE   11/09/2018  60            11221       \n",
              "4           3668650  CLOSED   09/24/2018  2181          11233       \n",
              "\n",
              "                       House Street      BIN Community Board Special District  \\\n",
              "0  NORTH 8 STREET                    3421354             301                    \n",
              "1  SHELDON AVENUE                    5817541             503                    \n",
              "2  EAST 81 STREET                    1046666             108                    \n",
              "3  MENAHAN STREET                    3821252             304                    \n",
              "4  PACIFIC STREET                    3038572             316                    \n",
              "\n",
              "  Complaint Category   Unit Disposition Date Disposition Code Inspection Date  \\\n",
              "0                 35  BKLYN       11/09/2018               I2      11/08/2018   \n",
              "1                 4S  SYE         11/09/2018               C2      11/09/2018   \n",
              "2                 6S  ELEVR              NaN                              NaN   \n",
              "3                 55  ERT         11/09/2018               D5      11/09/2018   \n",
              "4                 45  BKLYN       11/09/2018               A8      11/08/2018   \n",
              "\n",
              "               DOBRunDate  \n",
              "0  11/10/2018 12:00:00 AM  \n",
              "1  11/10/2018 12:00:00 AM  \n",
              "2  11/10/2018 12:00:00 AM  \n",
              "3  11/10/2018 12:00:00 AM  \n",
              "4  11/10/2018 12:00:00 AM  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8c46f5e3-d79e-496c-98ae-fe008647648a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Complaint Number</th>\n",
              "      <th>Status</th>\n",
              "      <th>Date Entered</th>\n",
              "      <th>House Number</th>\n",
              "      <th>ZIP Code</th>\n",
              "      <th>House Street</th>\n",
              "      <th>BIN</th>\n",
              "      <th>Community Board</th>\n",
              "      <th>Special District</th>\n",
              "      <th>Complaint Category</th>\n",
              "      <th>Unit</th>\n",
              "      <th>Disposition Date</th>\n",
              "      <th>Disposition Code</th>\n",
              "      <th>Inspection Date</th>\n",
              "      <th>DOBRunDate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3672431</td>\n",
              "      <td>CLOSED</td>\n",
              "      <td>10/22/2018</td>\n",
              "      <td>104</td>\n",
              "      <td>11249</td>\n",
              "      <td>NORTH 8 STREET</td>\n",
              "      <td>3421354</td>\n",
              "      <td>301</td>\n",
              "      <td></td>\n",
              "      <td>35</td>\n",
              "      <td>BKLYN</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>I2</td>\n",
              "      <td>11/08/2018</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>5136339</td>\n",
              "      <td>CLOSED</td>\n",
              "      <td>08/07/2018</td>\n",
              "      <td>561</td>\n",
              "      <td>10312</td>\n",
              "      <td>SHELDON AVENUE</td>\n",
              "      <td>5817541</td>\n",
              "      <td>503</td>\n",
              "      <td></td>\n",
              "      <td>4S</td>\n",
              "      <td>SYE</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>C2</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1494617</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>23</td>\n",
              "      <td>10028</td>\n",
              "      <td>EAST 81 STREET</td>\n",
              "      <td>1046666</td>\n",
              "      <td>108</td>\n",
              "      <td></td>\n",
              "      <td>6S</td>\n",
              "      <td>ELEVR</td>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3674825</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>60</td>\n",
              "      <td>11221</td>\n",
              "      <td>MENAHAN STREET</td>\n",
              "      <td>3821252</td>\n",
              "      <td>304</td>\n",
              "      <td></td>\n",
              "      <td>55</td>\n",
              "      <td>ERT</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>D5</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3668650</td>\n",
              "      <td>CLOSED</td>\n",
              "      <td>09/24/2018</td>\n",
              "      <td>2181</td>\n",
              "      <td>11233</td>\n",
              "      <td>PACIFIC STREET</td>\n",
              "      <td>3038572</td>\n",
              "      <td>316</td>\n",
              "      <td></td>\n",
              "      <td>45</td>\n",
              "      <td>BKLYN</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>A8</td>\n",
              "      <td>11/08/2018</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c46f5e3-d79e-496c-98ae-fe008647648a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8c46f5e3-d79e-496c-98ae-fe008647648a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8c46f5e3-d79e-496c-98ae-fe008647648a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Data.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFc4D3bRdkgs",
        "outputId": "cddd66a0-c7a3-4e8a-fa71-97b0b8e438f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Complaint Number               int64\n",
              "Status                        object\n",
              "Date Entered                  object\n",
              "House Number                  object\n",
              "ZIP Code                      object\n",
              "House Street                  object\n",
              "BIN                            int64\n",
              "Community Board               object\n",
              "Special District              object\n",
              "Complaint Category            object\n",
              "Unit                          object\n",
              "Disposition Date              object\n",
              "Disposition Code              object\n",
              "Inspection Date               object\n",
              "DOBRunDate                    object\n",
              "DateTime Entered      datetime64[ns]\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(Data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "boHapW_Rn8En",
        "outputId": "794b6f4a-0306-444d-e47a-80c6df9f0ea1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3297225"
            ]
          },
          "metadata": {},
          "execution_count": 114
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Data[\"DateTime Entered\"] = pd.to_datetime(Data[\"Date Entered\"])\n",
        "Data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        },
        "id": "a3cgosmAfnvQ",
        "outputId": "90cab21b-d510-497a-f0b9-9e653ce4d329"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Complaint Number  Status Date Entered  House Number   ZIP Code  \\\n",
              "0           3672431  CLOSED   10/22/2018  104           11249       \n",
              "1           5136339  CLOSED   08/07/2018  561           10312       \n",
              "2           1494617  ACTIVE   11/09/2018  23            10028       \n",
              "3           3674825  ACTIVE   11/09/2018  60            11221       \n",
              "4           3668650  CLOSED   09/24/2018  2181          11233       \n",
              "\n",
              "                       House Street      BIN Community Board Special District  \\\n",
              "0  NORTH 8 STREET                    3421354             301                    \n",
              "1  SHELDON AVENUE                    5817541             503                    \n",
              "2  EAST 81 STREET                    1046666             108                    \n",
              "3  MENAHAN STREET                    3821252             304                    \n",
              "4  PACIFIC STREET                    3038572             316                    \n",
              "\n",
              "  Complaint Category   Unit Disposition Date Disposition Code Inspection Date  \\\n",
              "0                 35  BKLYN       11/09/2018               I2      11/08/2018   \n",
              "1                 4S  SYE         11/09/2018               C2      11/09/2018   \n",
              "2                 6S  ELEVR              NaN                              NaN   \n",
              "3                 55  ERT         11/09/2018               D5      11/09/2018   \n",
              "4                 45  BKLYN       11/09/2018               A8      11/08/2018   \n",
              "\n",
              "               DOBRunDate DateTime Entered  \n",
              "0  11/10/2018 12:00:00 AM       2018-10-22  \n",
              "1  11/10/2018 12:00:00 AM       2018-08-07  \n",
              "2  11/10/2018 12:00:00 AM       2018-11-09  \n",
              "3  11/10/2018 12:00:00 AM       2018-11-09  \n",
              "4  11/10/2018 12:00:00 AM       2018-09-24  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-971f3662-3ef5-450a-bf83-1abd01af9761\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Complaint Number</th>\n",
              "      <th>Status</th>\n",
              "      <th>Date Entered</th>\n",
              "      <th>House Number</th>\n",
              "      <th>ZIP Code</th>\n",
              "      <th>House Street</th>\n",
              "      <th>BIN</th>\n",
              "      <th>Community Board</th>\n",
              "      <th>Special District</th>\n",
              "      <th>Complaint Category</th>\n",
              "      <th>Unit</th>\n",
              "      <th>Disposition Date</th>\n",
              "      <th>Disposition Code</th>\n",
              "      <th>Inspection Date</th>\n",
              "      <th>DOBRunDate</th>\n",
              "      <th>DateTime Entered</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3672431</td>\n",
              "      <td>CLOSED</td>\n",
              "      <td>10/22/2018</td>\n",
              "      <td>104</td>\n",
              "      <td>11249</td>\n",
              "      <td>NORTH 8 STREET</td>\n",
              "      <td>3421354</td>\n",
              "      <td>301</td>\n",
              "      <td></td>\n",
              "      <td>35</td>\n",
              "      <td>BKLYN</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>I2</td>\n",
              "      <td>11/08/2018</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "      <td>2018-10-22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>5136339</td>\n",
              "      <td>CLOSED</td>\n",
              "      <td>08/07/2018</td>\n",
              "      <td>561</td>\n",
              "      <td>10312</td>\n",
              "      <td>SHELDON AVENUE</td>\n",
              "      <td>5817541</td>\n",
              "      <td>503</td>\n",
              "      <td></td>\n",
              "      <td>4S</td>\n",
              "      <td>SYE</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>C2</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "      <td>2018-08-07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1494617</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>23</td>\n",
              "      <td>10028</td>\n",
              "      <td>EAST 81 STREET</td>\n",
              "      <td>1046666</td>\n",
              "      <td>108</td>\n",
              "      <td></td>\n",
              "      <td>6S</td>\n",
              "      <td>ELEVR</td>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "      <td>2018-11-09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3674825</td>\n",
              "      <td>ACTIVE</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>60</td>\n",
              "      <td>11221</td>\n",
              "      <td>MENAHAN STREET</td>\n",
              "      <td>3821252</td>\n",
              "      <td>304</td>\n",
              "      <td></td>\n",
              "      <td>55</td>\n",
              "      <td>ERT</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>D5</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "      <td>2018-11-09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3668650</td>\n",
              "      <td>CLOSED</td>\n",
              "      <td>09/24/2018</td>\n",
              "      <td>2181</td>\n",
              "      <td>11233</td>\n",
              "      <td>PACIFIC STREET</td>\n",
              "      <td>3038572</td>\n",
              "      <td>316</td>\n",
              "      <td></td>\n",
              "      <td>45</td>\n",
              "      <td>BKLYN</td>\n",
              "      <td>11/09/2018</td>\n",
              "      <td>A8</td>\n",
              "      <td>11/08/2018</td>\n",
              "      <td>11/10/2018 12:00:00 AM</td>\n",
              "      <td>2018-09-24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-971f3662-3ef5-450a-bf83-1abd01af9761')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-971f3662-3ef5-450a-bf83-1abd01af9761 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-971f3662-3ef5-450a-bf83-1abd01af9761');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Cleaning the data, make sure it contain value\n",
        "Data = Data[Data['Complaint Number'] >= 0]\n",
        "len(Data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nRUMJuWxhrMK",
        "outputId": "8313511b-cf5b-42a2-d88f-0b5485672d49"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3297225"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Data17 = Data[Data['DateTime Entered'] < '2017-12-31']\n",
        "Data17 = Data[Data['DateTime Entered'] > '2017-01-01']\n",
        "\n",
        "Data18 = Data[Data['DateTime Entered'] < '2018-12-31']\n",
        "Data18 = Data[Data['DateTime Entered'] > '2018-01-01']\n",
        "\n",
        "Data19 = Data[Data['DateTime Entered'] < '2019-12-31']\n",
        "Data19 = Data[Data['DateTime Entered'] > '2019-01-01']\n",
        "\n",
        "Data20 = Data[Data['DateTime Entered'] < '2020-12-31']\n",
        "Data20 = Data[Data['DateTime Entered'] > '2020-01-01']\n",
        "\n",
        "Data21 = Data[Data['DateTime Entered'] > '2021-01-01']"
      ],
      "metadata": {
        "id": "VSjtWBXmeq1S"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Data17Zipcode = Data17.groupby(['ZIP Code']).agg({'Complaint Number':'count','Status':'count','Complaint Category':'count'}).reset_index()\n",
        "Data18Zipcode = Data18.groupby(['ZIP Code']).agg({'Complaint Number':'count','Status':'count','Complaint Category':'count'}).reset_index()\n",
        "Data19Zipcode = Data19.groupby(['ZIP Code']).agg({'Complaint Number':'count','Status':'count','Complaint Category':'count'}).reset_index()\n",
        "Data20Zipcode = Data20.groupby(['ZIP Code']).agg({'Complaint Number':'count','Status':'count','Complaint Category':'count'}).reset_index()\n",
        "Data21Zipcode = Data21.groupby(['ZIP Code']).agg({'Complaint Number':'count','Status':'count','Complaint Category':'count'}).reset_index()\n",
        "Data17Zipcode.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "CiPYQljUeL3K",
        "outputId": "208f7917-a8dc-4888-ffe5-3767f8c0a9db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  ZIP Code  Complaint Number  Status  Complaint Category\n",
              "0    10000                 3       3                   3\n",
              "1    10001              3357    3357                3357\n",
              "2    10002              3693    3693                3693\n",
              "3    10003              4057    4057                4057\n",
              "4    10004               427     427                 427"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b99c0963-8208-46a4-95a7-4c4ee3bee490\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ZIP Code</th>\n",
              "      <th>Complaint Number</th>\n",
              "      <th>Status</th>\n",
              "      <th>Complaint Category</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10000</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10001</td>\n",
              "      <td>3357</td>\n",
              "      <td>3357</td>\n",
              "      <td>3357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10002</td>\n",
              "      <td>3693</td>\n",
              "      <td>3693</td>\n",
              "      <td>3693</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10003</td>\n",
              "      <td>4057</td>\n",
              "      <td>4057</td>\n",
              "      <td>4057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10004</td>\n",
              "      <td>427</td>\n",
              "      <td>427</td>\n",
              "      <td>427</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b99c0963-8208-46a4-95a7-4c4ee3bee490')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b99c0963-8208-46a4-95a7-4c4ee3bee490 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b99c0963-8208-46a4-95a7-4c4ee3bee490');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install --upgrade pyshp\n",
        "\n",
        "!pip install --upgrade shapely\n",
        "\n",
        "!pip install --upgrade descartes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 911
        },
        "id": "AxEia9GfjoMG",
        "outputId": "07c9ea01-6851-4e8f-b408-b6bb503aed9a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: geopandas in /usr/local/lib/python3.8/dist-packages (0.12.1)\n",
            "Collecting geopandas\n",
            "  Downloading geopandas-0.12.2-py3-none-any.whl (1.1 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.1 MB 28.1 MB/s \n",
            "\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.8/dist-packages (from geopandas) (21.3)\n",
            "Requirement already satisfied: fiona>=1.8 in /usr/local/lib/python3.8/dist-packages (from geopandas) (1.8.22)\n",
            "Requirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from geopandas) (1.3.5)\n",
            "Requirement already satisfied: pyproj>=2.6.1.post1 in /usr/local/lib/python3.8/dist-packages (from geopandas) (3.4.0)\n",
            "Requirement already satisfied: shapely>=1.7 in /usr/local/lib/python3.8/dist-packages (from geopandas) (1.8.5.post1)\n",
            "Requirement already satisfied: munch in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (2.5.0)\n",
            "Requirement already satisfied: click>=4.0 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (7.1.2)\n",
            "Requirement already satisfied: cligj>=0.5 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (0.7.2)\n",
            "Requirement already satisfied: click-plugins>=1.0 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (1.1.1)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (2022.9.24)\n",
            "Requirement already satisfied: six>=1.7 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (1.15.0)\n",
            "Requirement already satisfied: attrs>=17 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (22.1.0)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (57.4.0)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (2022.6)\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (1.21.6)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.8/dist-packages (from packaging->geopandas) (3.0.9)\n",
            "Installing collected packages: geopandas\n",
            "  Attempting uninstall: geopandas\n",
            "    Found existing installation: geopandas 0.12.1\n",
            "    Uninstalling geopandas-0.12.1:\n",
            "      Successfully uninstalled geopandas-0.12.1\n",
            "Successfully installed geopandas-0.12.2\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "geopandas"
                ]
              }
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting pyshp\n",
            "  Downloading pyshp-2.3.1-py2.py3-none-any.whl (46 kB)\n",
            "\u001b[?25l\r\u001b[K     |███████                         | 10 kB 23.5 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 20 kB 28.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▏          | 30 kB 34.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 40 kB 28.5 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 46 kB 4.1 MB/s \n",
            "\u001b[?25hInstalling collected packages: pyshp\n",
            "Successfully installed pyshp-2.3.1\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: shapely in /usr/local/lib/python3.8/dist-packages (1.8.5.post1)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: descartes in /usr/local/lib/python3.8/dist-packages (1.1.0)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.8/dist-packages (from descartes) (3.2.2)\n",
            "Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.8/dist-packages (from matplotlib->descartes) (1.21.6)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.8/dist-packages (from matplotlib->descartes) (0.11.0)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->descartes) (2.8.2)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->descartes) (3.0.9)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->descartes) (1.4.4)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.8/dist-packages (from python-dateutil>=2.1->matplotlib->descartes) (1.15.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install --upgrade xlrd"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        },
        "id": "NjtG21msjtFE",
        "outputId": "9f548b23-c2b8-4a38-e568-18c134f7cc73"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: xlrd in /usr/local/lib/python3.8/dist-packages (1.2.0)\n",
            "Collecting xlrd\n",
            "  Downloading xlrd-2.0.1-py2.py3-none-any.whl (96 kB)\n",
            "\u001b[K     |████████████████████████████████| 96 kB 5.8 MB/s \n",
            "\u001b[?25hInstalling collected packages: xlrd\n",
            "  Attempting uninstall: xlrd\n",
            "    Found existing installation: xlrd 1.2.0\n",
            "    Uninstalling xlrd-1.2.0:\n",
            "      Successfully uninstalled xlrd-1.2.0\n",
            "Successfully installed xlrd-2.0.1\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "xlrd"
                ]
              }
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#include packages\n",
        "import pandas as pd\n",
        "import geopandas as gpd #geopandas for dataframes with spatial info\n",
        "from shapely.geometry import Point\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt #for creating plots\n",
        "\n",
        "import os \n",
        "import seaborn as sns #for styling the plots\n",
        "import statsmodels.formula.api as smf\n",
        "import warnings\n",
        "import urllib.request\n",
        "warnings.filterwarnings('ignore')\n",
        "%matplotlib inline "
      ],
      "metadata": {
        "id": "Mj1B71cIjyKz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "if not os.path.exists('Data'):\n",
        "    !mkdir Data\n",
        "if not os.path.exists('Data/RollingSale'):\n",
        "    !mkdir Data/RollingSale"
      ],
      "metadata": {
        "id": "31qFV7loj9Hm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# download zipcode map\n",
        "url = 'https://github.com/CUSP2020PUI/Data/raw/master/ZIPCODE.zip'\n",
        "urllib.request.urlretrieve(url,'Data/ZIPCODE.zip')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bSo0pPBZjDzs",
        "outputId": "a676bfed-dc62-485e-f265-7aaf5d7500cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('Data/ZIPCODE.zip', <http.client.HTTPMessage at 0x7f68aa9ad940>)"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#it comes in the zip archive, so use zipfile module to extract it\n",
        "import zipfile\n",
        "with zipfile.ZipFile('Data/ZIPCODE.zip', 'r') as zip_ref:\n",
        "    zip_ref.extractall('Data/ZIPCODE')"
      ],
      "metadata": {
        "id": "9F2b1RSnkBs8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "os.listdir('./Data/ZIPCODE') #check the filename for the shapefile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P_bW_BOYkDpL",
        "outputId": "f07e4df6-d723-4a10-df94-95769ef56e34"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['ZIP_CODE_040114.prj',\n",
              " 'ZIP_CODE_040114.dbf',\n",
              " 'ZIP_CODE_040114.sbn',\n",
              " 'ZIP_CODE_040114.shp',\n",
              " 'ZIP_CODE_040114.sbx',\n",
              " 'ZIP_CODE_040114.shp.xml',\n",
              " 'ZIP_CODE_040114.shx']"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#load the resulting shapefile using geopandas \n",
        "zipcode = gpd.read_file('./Data/ZIPCODE/ZIP_CODE_040114.shp')\n",
        "zipcode.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ysucLL5zkFq7",
        "outputId": "582086ef-8f4e-4a83-f8c2-5ea14448448d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  ZIPCODE BLDGZIP   PO_NAME  POPULATION          AREA STATE  COUNTY ST_FIPS  \\\n",
              "0   11436       0   Jamaica     18681.0  2.269930e+07    NY  Queens      36   \n",
              "1   11213       0  Brooklyn     62426.0  2.963100e+07    NY   Kings      36   \n",
              "2   11212       0  Brooklyn     83866.0  4.197210e+07    NY   Kings      36   \n",
              "3   11225       0  Brooklyn     56527.0  2.369863e+07    NY   Kings      36   \n",
              "4   11218       0  Brooklyn     72280.0  3.686880e+07    NY   Kings      36   \n",
              "\n",
              "  CTY_FIPS                   URL  SHAPE_AREA  SHAPE_LEN  \\\n",
              "0      081  http://www.usps.com/         0.0        0.0   \n",
              "1      047  http://www.usps.com/         0.0        0.0   \n",
              "2      047  http://www.usps.com/         0.0        0.0   \n",
              "3      047  http://www.usps.com/         0.0        0.0   \n",
              "4      047  http://www.usps.com/         0.0        0.0   \n",
              "\n",
              "                                            geometry  \n",
              "0  POLYGON ((1038098.252 188138.380, 1038141.936 ...  \n",
              "1  POLYGON ((1001613.713 186926.440, 1002314.243 ...  \n",
              "2  POLYGON ((1011174.276 183696.338, 1011373.584 ...  \n",
              "3  POLYGON ((995908.365 183617.613, 996522.848 18...  \n",
              "4  POLYGON ((991997.113 176307.496, 992042.798 17...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-85a8dd8c-ba70-4c58-98e9-0c4eb1e26cbe\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ZIPCODE</th>\n",
              "      <th>BLDGZIP</th>\n",
              "      <th>PO_NAME</th>\n",
              "      <th>POPULATION</th>\n",
              "      <th>AREA</th>\n",
              "      <th>STATE</th>\n",
              "      <th>COUNTY</th>\n",
              "      <th>ST_FIPS</th>\n",
              "      <th>CTY_FIPS</th>\n",
              "      <th>URL</th>\n",
              "      <th>SHAPE_AREA</th>\n",
              "      <th>SHAPE_LEN</th>\n",
              "      <th>geometry</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11436</td>\n",
              "      <td>0</td>\n",
              "      <td>Jamaica</td>\n",
              "      <td>18681.0</td>\n",
              "      <td>2.269930e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Queens</td>\n",
              "      <td>36</td>\n",
              "      <td>081</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1038098.252 188138.380, 1038141.936 ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11213</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>62426.0</td>\n",
              "      <td>2.963100e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1001613.713 186926.440, 1002314.243 ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11212</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>83866.0</td>\n",
              "      <td>4.197210e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1011174.276 183696.338, 1011373.584 ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11225</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>56527.0</td>\n",
              "      <td>2.369863e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((995908.365 183617.613, 996522.848 18...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>11218</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>72280.0</td>\n",
              "      <td>3.686880e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((991997.113 176307.496, 992042.798 17...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85a8dd8c-ba70-4c58-98e9-0c4eb1e26cbe')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-85a8dd8c-ba70-4c58-98e9-0c4eb1e26cbe button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-85a8dd8c-ba70-4c58-98e9-0c4eb1e26cbe');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#It also overloads some methods, e.g. accessing the geometry field value would now visualize it by default\n",
        "zipcode.geometry[0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 321
        },
        "id": "aD_53IPUkIrk",
        "outputId": "db92e1d9-cb38-4dbc-ee94-f8beb4d59a27"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<shapely.geometry.polygon.Polygon at 0x7f689b95e8e0>"
            ],
            "image/svg+xml": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"300\" height=\"300\" viewBox=\"1037809.7516610813 181881.85104997872 5520.9970944589 7789.505680806062\" preserveAspectRatio=\"xMinYMin meet\"><g transform=\"matrix(1,0,0,-1,0,371553.2077807635)\"><path fill-rule=\"evenodd\" fill=\"#66cc99\" stroke=\"#555555\" stroke-width=\"51.93003787204041\" opacity=\"0.6\" d=\"M 1038098.2518714815,188138.38000671566 L 1038141.9358392209,188154.78778229654 L 1038171.28978315,188165.81302271783 L 1038280.1517701447,188206.7030327916 L 1038520.8530603945,188296.76650096476 L 1038764.2265893966,188388.41822054982 L 1039008.3583189845,188480.26219697297 L 1039251.8240393996,188571.71870696545 L 1039504.4879041463,188666.27855721116 L 1039757.4201410562,188761.65894387662 L 1039853.95275639,188797.62311080098 L 1039876.9028417319,188806.09619095922 L 1039898.1567362249,188814.26874679327 L 1040001.0243126452,188852.78573013842 L 1040114.1956742257,188895.89555205405 L 1040244.262015149,188944.6585778892 L 1040360.0363898873,188988.14832030237 L 1040487.856344223,189036.33555988967 L 1040731.019571811,189127.60965554416 L 1040974.3944131434,189218.6832922995 L 1041221.4418193102,189310.20837171376 L 1041374.3401355594,189368.71284788847 L 1041391.6599828154,189376.22923704982 L 1041406.9325900674,189382.85652038455 L 1041423.3105100542,189348.2476657182 L 1041589.3121465594,189067.30236145854 L 1041715.3253459781,188850.66532754898 L 1041723.9933076501,188834.64239370823 L 1041729.6816164851,188814.37799854577 L 1041737.8036474735,188779.94171571732 L 1041764.2228859812,188679.26278321445 L 1041774.4886134714,188632.57685296237 L 1041778.719904229,188604.5831425488 L 1041780.2553342283,188555.10062997043 L 1041780.8941124827,188353.85267287493 L 1041777.4252873957,188321.5915825516 L 1041775.9295554757,188285.90497413278 L 1041753.3515166491,188074.85257472098 L 1041753.2521073967,188040.02587272227 L 1041752.7589981407,188003.65061737597 L 1041755.517194733,187990.2575995475 L 1041776.3193184733,187892.16133904457 L 1041779.9052693099,187875.2532363832 L 1041798.762515068,187786.3252646327 L 1041804.4488554001,187760.10221996903 L 1041861.1646212339,187504.46034279466 L 1041865.1908598989,187485.54010504484 L 1041915.5877407342,187260.59698538482 L 1041940.4804074764,187147.9945202917 L 1041978.4298066497,186994.97514130175 L 1042019.4375986457,186847.32353371382 L 1042093.0070053041,186595.43886688352 L 1042163.6006961465,186352.79630754888 L 1042185.3536053896,186276.4378644675 L 1042220.9939540625,186153.83902829885 L 1042234.5828376412,186113.15505455434 L 1042315.5150904804,185874.9383393824 L 1042344.5366859734,185793.12288621068 L 1042404.5496893078,185645.36596387625 L 1042499.9999577254,185400.88187280297 L 1042519.8814796507,185363.3675121367 L 1042531.1839504838,185340.3731355518 L 1042587.8377085626,185225.87861388922 L 1042629.2008148134,185150.42764930427 L 1042653.8726814836,185105.42248997092 L 1042680.4244656414,185061.91503104568 L 1042728.8006812334,184999.8784097135 L 1042873.0300515592,184831.05820930004 L 1042973.837592721,184719.39242213964 L 1043037.1990145594,184630.52186496556 L 1043039.5215164721,184625.4979248792 L 1043041.9946086407,184607.29290880263 L 1043042.24854514,184599.11740021408 L 1043033.5832081437,184542.94854930043 L 1042969.4675227255,184166.8695770502 L 1042926.6631463915,183929.48028804362 L 1042829.5435899794,183381.6513312161 L 1042802.0190387219,183232.42098663747 L 1042740.2048579007,182840.26691529155 L 1042714.8656697273,182675.1898176372 L 1042696.5704307258,182499.87848846614 L 1042679.6446115673,182337.48740905523 L 1042671.5609663129,182294.72240272164 L 1042499.9999577254,182305.95696030557 L 1042398.1376286447,182311.02256695926 L 1042147.3241539001,182340.42014595866 L 1041904.5014768094,182365.26917763054 L 1041788.428546235,182375.50275295973 L 1041658.2040691376,182381.9492623806 L 1041611.5063278973,182376.9364771396 L 1041541.3926229775,182361.3400516361 L 1041416.4571773112,182350.11566463113 L 1041293.0109018981,182338.87454538047 L 1041200.8893669844,182333.91261304915 L 1040535.093782559,182327.94772996008 L 1040481.536474973,182326.62588220835 L 1040462.7550164759,182326.0461589694 L 1040396.2640077323,182294.49930605292 L 1040322.3474888951,182264.4711508751 L 1040268.6901158988,182242.67296613753 L 1040210.4054555595,182219.28587380052 L 1040165.6447183043,182203.41549871862 L 1040133.3098092228,182194.4955690503 L 1040084.205248639,182184.3384371251 L 1040048.0973812342,182179.08811955154 L 1039999.9997083992,182175.19081763923 L 1039905.661314398,182170.35126037896 L 1039704.2834363133,182217.32262313366 L 1039633.9105455577,182227.62608021498 L 1039450.4483140558,182246.5587851256 L 1039365.8910684735,182252.4035897106 L 1039330.8084614724,182254.07747088373 L 1039272.433578223,182256.8635545522 L 1039284.6297480613,182324.05633354187 L 1039289.9263253957,182353.27346672118 L 1039294.8045964837,182381.02997288108 L 1039304.1087117344,182434.06103479862 L 1039316.2031757236,182499.87848846614 L 1039345.6529199779,182705.27932438254 L 1039354.908150807,182804.5025511384 L 1039358.9806492329,182870.17433579266 L 1039360.0695578158,182887.73926129937 L 1039372.1010298133,183081.72771847248 L 1039373.7470238954,183108.16204880178 L 1039375.3812069744,183134.6127832979 L 1039392.5560413897,183500.64978088439 L 1039392.6626684815,183505.68323537707 L 1039392.944492057,183519.7875378877 L 1039394.0271670669,183774.80966563523 L 1039388.6817053109,184048.53713655472 L 1039378.1823824793,184276.98188963532 L 1039372.3864623159,184361.45711438358 L 1039362.3261149824,184465.75054097176 L 1039350.0154440552,184552.04170696437 L 1039323.5519143045,184671.9279501289 L 1039320.5397812277,184699.97973129153 L 1039297.1143031418,184814.75410804152 L 1039272.0881064832,184914.84577138722 L 1039251.5458247215,184982.23769696057 L 1039246.1682108045,184999.8784097135 L 1039235.0035349727,185037.74906888604 L 1039219.4701014757,185092.01667688787 L 1039161.976121977,185250.6426719725 L 1039034.5652875602,185594.706288293 L 1038934.7593848109,185870.5935318023 L 1038859.2795488983,186058.05017788708 L 1038817.259947896,186185.691326797 L 1038807.1129865646,186216.5154121369 L 1038804.307217896,186224.11775913835 L 1038790.185526982,186261.83257871866 L 1038656.1697188914,186620.62451204658 L 1038600.9929919839,186769.1166691333 L 1038451.1789871454,187162.09062071145 L 1038385.1741978973,187358.28740680218 L 1038333.1995643079,187499.87865905464 L 1038298.242941305,187594.88109371066 L 1038290.3276028186,187616.39253363013 L 1038112.4477092326,188099.81676363945 L 1038098.2518714815,188138.38000671566 z\" /></g></svg>"
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "zipcode.crs"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OOXejFBUkKwr",
        "outputId": "3c522e2f-4357-4c53-c3b0-cdc778fcbfa4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Derived Projected CRS: EPSG:2263>\n",
              "Name: NAD83 / New York Long Island (ftUS)\n",
              "Axis Info [cartesian]:\n",
              "- X[east]: Easting (US survey foot)\n",
              "- Y[north]: Northing (US survey foot)\n",
              "Area of Use:\n",
              "- name: United States (USA) - New York - counties of Bronx; Kings; Nassau; New York; Queens; Richmond; Suffolk.\n",
              "- bounds: (-74.26, 40.47, -71.8, 41.3)\n",
              "Coordinate Operation:\n",
              "- name: SPCS83 New York Long Island zone (US Survey feet)\n",
              "- method: Lambert Conic Conformal (2SP)\n",
              "Datum: North American Datum 1983\n",
              "- Ellipsoid: GRS 1980\n",
              "- Prime Meridian: Greenwich"
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Check the NYC map\n",
        "zipcode.plot(figsize=(10,10),aspect='equal')\n",
        "#map of zip code areas in NYC"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 625
        },
        "id": "r_0WisnekM7c",
        "outputId": "8111ca4b-2eb3-4bef-d8cf-3dc4a23952ad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f688ec27d00>"
            ]
          },
          "metadata": {},
          "execution_count": 73
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Convert it to numeric (int)\n",
        "zipcode['ZIP Code'] = zipcode['ZIPCODE'].astype(int)\n",
        "NYC_zipcode = zipcode['ZIP Code'].unique()"
      ],
      "metadata": {
        "id": "L_r0KQ9hkTMn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Data17Zipcode.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "OXdwP9VKzHgp",
        "outputId": "69afa0e9-1105-4cca-fcfd-4d51c8b144bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  ZIP Code  Complaint Number  Status  Complaint Category\n",
              "0    10000                 3       3                   3\n",
              "1    10001              3357    3357                3357\n",
              "2    10002              3693    3693                3693\n",
              "3    10003              4057    4057                4057\n",
              "4    10004               427     427                 427"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fbad6056-0ad1-49d5-80f3-7af3792bf90a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ZIP Code</th>\n",
              "      <th>Complaint Number</th>\n",
              "      <th>Status</th>\n",
              "      <th>Complaint Category</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10000</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10001</td>\n",
              "      <td>3357</td>\n",
              "      <td>3357</td>\n",
              "      <td>3357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10002</td>\n",
              "      <td>3693</td>\n",
              "      <td>3693</td>\n",
              "      <td>3693</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10003</td>\n",
              "      <td>4057</td>\n",
              "      <td>4057</td>\n",
              "      <td>4057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10004</td>\n",
              "      <td>427</td>\n",
              "      <td>427</td>\n",
              "      <td>427</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fbad6056-0ad1-49d5-80f3-7af3792bf90a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fbad6056-0ad1-49d5-80f3-7af3792bf90a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fbad6056-0ad1-49d5-80f3-7af3792bf90a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "zipcode.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "KgNVtBDCpSVw",
        "outputId": "c3c69203-aa73-40a5-8cc2-e2ee4ec404fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   ZIPCODE BLDGZIP   PO_NAME  POPULATION          AREA STATE  COUNTY ST_FIPS  \\\n",
              "0    11436       0   Jamaica     18681.0  2.269930e+07    NY  Queens      36   \n",
              "1    11213       0  Brooklyn     62426.0  2.963100e+07    NY   Kings      36   \n",
              "2    11212       0  Brooklyn     83866.0  4.197210e+07    NY   Kings      36   \n",
              "3    11225       0  Brooklyn     56527.0  2.369863e+07    NY   Kings      36   \n",
              "4    11218       0  Brooklyn     72280.0  3.686880e+07    NY   Kings      36   \n",
              "\n",
              "  CTY_FIPS                   URL  SHAPE_AREA  SHAPE_LEN  \\\n",
              "0      081  http://www.usps.com/         0.0        0.0   \n",
              "1      047  http://www.usps.com/         0.0        0.0   \n",
              "2      047  http://www.usps.com/         0.0        0.0   \n",
              "3      047  http://www.usps.com/         0.0        0.0   \n",
              "4      047  http://www.usps.com/         0.0        0.0   \n",
              "\n",
              "                                            geometry  \n",
              "0  POLYGON ((1038098.252 188138.380, 1038141.936 ...  \n",
              "1  POLYGON ((1001613.713 186926.440, 1002314.243 ...  \n",
              "2  POLYGON ((1011174.276 183696.338, 1011373.584 ...  \n",
              "3  POLYGON ((995908.365 183617.613, 996522.848 18...  \n",
              "4  POLYGON ((991997.113 176307.496, 992042.798 17...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-99f20ee6-7f91-4e03-aaf3-5c8f2cde1c13\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ZIPCODE</th>\n",
              "      <th>BLDGZIP</th>\n",
              "      <th>PO_NAME</th>\n",
              "      <th>POPULATION</th>\n",
              "      <th>AREA</th>\n",
              "      <th>STATE</th>\n",
              "      <th>COUNTY</th>\n",
              "      <th>ST_FIPS</th>\n",
              "      <th>CTY_FIPS</th>\n",
              "      <th>URL</th>\n",
              "      <th>SHAPE_AREA</th>\n",
              "      <th>SHAPE_LEN</th>\n",
              "      <th>geometry</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11436</td>\n",
              "      <td>0</td>\n",
              "      <td>Jamaica</td>\n",
              "      <td>18681.0</td>\n",
              "      <td>2.269930e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Queens</td>\n",
              "      <td>36</td>\n",
              "      <td>081</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1038098.252 188138.380, 1038141.936 ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11213</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>62426.0</td>\n",
              "      <td>2.963100e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1001613.713 186926.440, 1002314.243 ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11212</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>83866.0</td>\n",
              "      <td>4.197210e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1011174.276 183696.338, 1011373.584 ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11225</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>56527.0</td>\n",
              "      <td>2.369863e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((995908.365 183617.613, 996522.848 18...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>11218</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>72280.0</td>\n",
              "      <td>3.686880e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((991997.113 176307.496, 992042.798 17...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99f20ee6-7f91-4e03-aaf3-5c8f2cde1c13')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-99f20ee6-7f91-4e03-aaf3-5c8f2cde1c13 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-99f20ee6-7f91-4e03-aaf3-5c8f2cde1c13');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 144
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "zipcode['ZIPCODE'] = zipcode['ZIPCODE'].astype(int)"
      ],
      "metadata": {
        "id": "yQEcG8jrqqzV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Data17Zipcode['Avg_171819'] = (Data17Zipcode['Complaint Number'] + Data18Zipcode['Complaint Number'] + Data19Zipcode['Complaint Number'])/3\n",
        "Data17Zipcode['Change_20'] = Data20Zipcode['Complaint Number'] - Data17Zipcode['Avg_171819']\n",
        "Data17Zipcode['Change_21'] = Data21Zipcode['Complaint Number'] - Data17Zipcode['Avg_171819']\n",
        "Data17Zipcode.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "p2CmBd8UxngP",
        "outputId": "f21e344d-2c88-48ba-d7b2-9844b4513e2e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  ZIP Code  Complaint Number  Status  Complaint Category   Avg_171819  \\\n",
              "0    10000                 3       3                   3     3.000000   \n",
              "1    10001              3357    3357                3357  3346.666667   \n",
              "2    10002              3693    3693                3693  3682.333333   \n",
              "3    10003              4057    4057                4057  4048.333333   \n",
              "4    10004               427     427                 427   425.333333   \n",
              "\n",
              "     Change_20    Change_21  \n",
              "0     0.000000    -2.000000  \n",
              "1 -1021.666667 -2293.666667  \n",
              "2 -1207.333333 -2468.333333  \n",
              "3 -1085.333333 -2368.333333  \n",
              "4  -112.333333  -246.333333  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fa171bd6-1726-48f2-a612-ae904dc34eb4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ZIP Code</th>\n",
              "      <th>Complaint Number</th>\n",
              "      <th>Status</th>\n",
              "      <th>Complaint Category</th>\n",
              "      <th>Avg_171819</th>\n",
              "      <th>Change_20</th>\n",
              "      <th>Change_21</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10000</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10001</td>\n",
              "      <td>3357</td>\n",
              "      <td>3357</td>\n",
              "      <td>3357</td>\n",
              "      <td>3346.666667</td>\n",
              "      <td>-1021.666667</td>\n",
              "      <td>-2293.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10002</td>\n",
              "      <td>3693</td>\n",
              "      <td>3693</td>\n",
              "      <td>3693</td>\n",
              "      <td>3682.333333</td>\n",
              "      <td>-1207.333333</td>\n",
              "      <td>-2468.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10003</td>\n",
              "      <td>4057</td>\n",
              "      <td>4057</td>\n",
              "      <td>4057</td>\n",
              "      <td>4048.333333</td>\n",
              "      <td>-1085.333333</td>\n",
              "      <td>-2368.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10004</td>\n",
              "      <td>427</td>\n",
              "      <td>427</td>\n",
              "      <td>427</td>\n",
              "      <td>425.333333</td>\n",
              "      <td>-112.333333</td>\n",
              "      <td>-246.333333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa171bd6-1726-48f2-a612-ae904dc34eb4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fa171bd6-1726-48f2-a612-ae904dc34eb4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fa171bd6-1726-48f2-a612-ae904dc34eb4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#merge price data with the zip code shapes into a new geopandas dataframe\n",
        "ComplaintGeo = zipcode.merge(Data17Zipcode,left_on='ZIPCODE',right_on='ZIP Code',how='left')\n",
        "ComplaintGeo.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "AH3G1agzq48W",
        "outputId": "213a75f9-5e52-48cb-c90f-a66273da6db3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  ZIPCODE BLDGZIP   PO_NAME  POPULATION          AREA STATE  COUNTY ST_FIPS  \\\n",
              "0   11436       0   Jamaica     18681.0  2.269930e+07    NY  Queens      36   \n",
              "1   11213       0  Brooklyn     62426.0  2.963100e+07    NY   Kings      36   \n",
              "2   11212       0  Brooklyn     83866.0  4.197210e+07    NY   Kings      36   \n",
              "3   11225       0  Brooklyn     56527.0  2.369863e+07    NY   Kings      36   \n",
              "4   11218       0  Brooklyn     72280.0  3.686880e+07    NY   Kings      36   \n",
              "\n",
              "  CTY_FIPS                   URL  SHAPE_AREA  SHAPE_LEN  \\\n",
              "0      081  http://www.usps.com/         0.0        0.0   \n",
              "1      047  http://www.usps.com/         0.0        0.0   \n",
              "2      047  http://www.usps.com/         0.0        0.0   \n",
              "3      047  http://www.usps.com/         0.0        0.0   \n",
              "4      047  http://www.usps.com/         0.0        0.0   \n",
              "\n",
              "                                            geometry ZIP Code  \\\n",
              "0  POLYGON ((1038098.252 188138.380, 1038141.936 ...    11436   \n",
              "1  POLYGON ((1001613.713 186926.440, 1002314.243 ...    11213   \n",
              "2  POLYGON ((1011174.276 183696.338, 1011373.584 ...    11212   \n",
              "3  POLYGON ((995908.365 183617.613, 996522.848 18...    11225   \n",
              "4  POLYGON ((991997.113 176307.496, 992042.798 17...    11218   \n",
              "\n",
              "   Complaint Number  Status  Complaint Category   Avg_171819    Change_20  \\\n",
              "0            1597.0  1597.0              1597.0  1591.000000 -1089.000000   \n",
              "1            4084.0  4084.0              4084.0  4069.000000  -363.000000   \n",
              "2            3370.0  3370.0              3370.0  3359.333333   274.666667   \n",
              "3            4132.0  4132.0              4132.0  4123.666667 -1110.666667   \n",
              "4            4153.0  4153.0              4153.0  4137.333333   952.666667   \n",
              "\n",
              "     Change_21  \n",
              "0 -1370.000000  \n",
              "1 -2598.000000  \n",
              "2 -2672.333333  \n",
              "3 -2239.666667  \n",
              "4 -2921.333333  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e7ba03e-b29e-4823-8d74-769897237c5c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ZIPCODE</th>\n",
              "      <th>BLDGZIP</th>\n",
              "      <th>PO_NAME</th>\n",
              "      <th>POPULATION</th>\n",
              "      <th>AREA</th>\n",
              "      <th>STATE</th>\n",
              "      <th>COUNTY</th>\n",
              "      <th>ST_FIPS</th>\n",
              "      <th>CTY_FIPS</th>\n",
              "      <th>URL</th>\n",
              "      <th>SHAPE_AREA</th>\n",
              "      <th>SHAPE_LEN</th>\n",
              "      <th>geometry</th>\n",
              "      <th>ZIP Code</th>\n",
              "      <th>Complaint Number</th>\n",
              "      <th>Status</th>\n",
              "      <th>Complaint Category</th>\n",
              "      <th>Avg_171819</th>\n",
              "      <th>Change_20</th>\n",
              "      <th>Change_21</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>11436</td>\n",
              "      <td>0</td>\n",
              "      <td>Jamaica</td>\n",
              "      <td>18681.0</td>\n",
              "      <td>2.269930e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Queens</td>\n",
              "      <td>36</td>\n",
              "      <td>081</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1038098.252 188138.380, 1038141.936 ...</td>\n",
              "      <td>11436</td>\n",
              "      <td>1597.0</td>\n",
              "      <td>1597.0</td>\n",
              "      <td>1597.0</td>\n",
              "      <td>1591.000000</td>\n",
              "      <td>-1089.000000</td>\n",
              "      <td>-1370.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11213</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>62426.0</td>\n",
              "      <td>2.963100e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1001613.713 186926.440, 1002314.243 ...</td>\n",
              "      <td>11213</td>\n",
              "      <td>4084.0</td>\n",
              "      <td>4084.0</td>\n",
              "      <td>4084.0</td>\n",
              "      <td>4069.000000</td>\n",
              "      <td>-363.000000</td>\n",
              "      <td>-2598.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11212</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>83866.0</td>\n",
              "      <td>4.197210e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((1011174.276 183696.338, 1011373.584 ...</td>\n",
              "      <td>11212</td>\n",
              "      <td>3370.0</td>\n",
              "      <td>3370.0</td>\n",
              "      <td>3370.0</td>\n",
              "      <td>3359.333333</td>\n",
              "      <td>274.666667</td>\n",
              "      <td>-2672.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11225</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>56527.0</td>\n",
              "      <td>2.369863e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((995908.365 183617.613, 996522.848 18...</td>\n",
              "      <td>11225</td>\n",
              "      <td>4132.0</td>\n",
              "      <td>4132.0</td>\n",
              "      <td>4132.0</td>\n",
              "      <td>4123.666667</td>\n",
              "      <td>-1110.666667</td>\n",
              "      <td>-2239.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>11218</td>\n",
              "      <td>0</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>72280.0</td>\n",
              "      <td>3.686880e+07</td>\n",
              "      <td>NY</td>\n",
              "      <td>Kings</td>\n",
              "      <td>36</td>\n",
              "      <td>047</td>\n",
              "      <td>http://www.usps.com/</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>POLYGON ((991997.113 176307.496, 992042.798 17...</td>\n",
              "      <td>11218</td>\n",
              "      <td>4153.0</td>\n",
              "      <td>4153.0</td>\n",
              "      <td>4153.0</td>\n",
              "      <td>4137.333333</td>\n",
              "      <td>952.666667</td>\n",
              "      <td>-2921.333333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e7ba03e-b29e-4823-8d74-769897237c5c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9e7ba03e-b29e-4823-8d74-769897237c5c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9e7ba03e-b29e-4823-8d74-769897237c5c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 149
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#plot the spatial distribution of Avg_171819\n",
        "ComplaintGeo.plot(column='Avg_171819',colormap='Spectral_r',legend=True,markersize=0.01,figsize=(10,10),missing_kwds={\n",
        "                \"color\": \"lightgrey\", ## what to do with missing values\n",
        "                \n",
        "                \"hatch\": \"\",\n",
        "                \"label\": \"Missing values\",\n",
        "                },)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 592
        },
        "id": "y_R-V2QerD3F",
        "outputId": "09c45821-7334-4a08-ae67-3320c0206379"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f6886ec9220>"
            ]
          },
          "metadata": {},
          "execution_count": 151
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#plot the spatial distribution of Change_20\n",
        "ComplaintGeo.plot(column='Change_20',colormap='Spectral_r',legend=True,markersize=0.01,figsize=(10,10),missing_kwds={\n",
        "                \"color\": \"lightgrey\", ## what to do with missing values\n",
        "                \n",
        "                \"hatch\": \"\",\n",
        "                \"label\": \"Missing values\",\n",
        "                },)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 593
        },
        "id": "rVS7H8hy0kr9",
        "outputId": "2afa1c50-5390-4755-b393-c9f8a2fea0da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f6886ee08e0>"
            ]
          },
          "metadata": {},
          "execution_count": 152
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#plot the spatial distribution of Change_21\n",
        "ComplaintGeo.plot(column='Change_21',colormap='Spectral_r',legend=True,markersize=0.01,figsize=(10,10),missing_kwds={\n",
        "                \"color\": \"lightgrey\", ## what to do with missing values\n",
        "                \n",
        "                \"hatch\": \"\",\n",
        "                \"label\": \"Missing values\",\n",
        "                },)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 595
        },
        "id": "SZ_-1J7l0rZ2",
        "outputId": "d517f882-e658-416e-82c9-b95dc5988160"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f68872027f0>"
            ]
          },
          "metadata": {},
          "execution_count": 153
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install mapclassify"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fsJpeLo4sVHj",
        "outputId": "564b3923-d449-4a3a-b4a5-004f19f8bb46"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting mapclassify\n",
            "  Downloading mapclassify-2.4.3-py3-none-any.whl (38 kB)\n",
            "Requirement already satisfied: numpy>=1.3 in /usr/local/lib/python3.8/dist-packages (from mapclassify) (1.21.6)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.8/dist-packages (from mapclassify) (2.8.8)\n",
            "Requirement already satisfied: pandas>=1.0 in /usr/local/lib/python3.8/dist-packages (from mapclassify) (1.3.5)\n",
            "Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.8/dist-packages (from mapclassify) (1.7.3)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.8/dist-packages (from mapclassify) (1.0.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0->mapclassify) (2022.6)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0->mapclassify) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.8/dist-packages (from python-dateutil>=2.7.3->pandas>=1.0->mapclassify) (1.15.0)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.8/dist-packages (from scikit-learn->mapclassify) (1.2.0)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from scikit-learn->mapclassify) (3.1.0)\n",
            "Installing collected packages: mapclassify\n",
            "Successfully installed mapclassify-2.4.3\n"
          ]
        }
      ]
    }
  ]
}
